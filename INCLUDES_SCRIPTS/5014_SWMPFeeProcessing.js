//created by swakil

logDebug("Starting COA Script 5014_SWMPFeeProcessing");

if ( balanceDue <= 0 && !(AInfo["Paying with Bond"] == 'Yes') )
{
	logDebug("Balans due is <= 0 AND Paying with Bond is NOT YES - sending email, updating workflow, adding inspection...");
	
	activateTask("Permit Issued") 
	logDebug("JMPorter - Permit Issued = ActiveTask");
	
	updateTask("Permit Issued", "Awaiting Approval", "EMSE", "Script");
	
	addPendingInspection("ECKO and Initial Inspection", "Generated by EMSE");
	
	closeTask("Fee Processing","Fees Paid", "Closed by Script 14");
	closeTask("Application Submittal","Accepted", "Closed by Script 14");
	logDebug("JMPorter - Fee Processing = CloseTask");
	
	var reportname = "Stormwater_Quality_Permit";
	var template = "SWMP PAYMENT RECEIVED # 361";
	var contact = "Applicant"; //comma delimted list of contact types
	//var joke = "Where there's a will, there's a relative.";

	var emailparams = aa.util.newHashtable();
	//emailparams.put("$$Joke$$", joke);
	
	var reportparams = aa.util.newHashtable();
	//reportparams.put("Record_ID", "jhgjklhkj");
	
	emailContacts(contact, template, emailparams, reportname, reportparams, "N", "");
	
}

function addPendingInspection(iType, inspComm) {
    var inspId = 0;
    var inspectorObj = null;
    var inspTime = null;

    var schedRes = aa.inspection.scheduleInspection(capId, inspectorObj, aa.date.parseDate(dateAdd(null, 0)), inspTime, iType, inspComm);

    if (schedRes.getSuccess()) {
        inspId = schedRes.output;
        aa.print("inspId = " + inspId);

        var justScheduled = aa.inspection.getInspection(capId, inspId);

        if (justScheduled.getSuccess()) {
            var inspModel = justScheduled.getOutput();

            inspModel.setInspectionStatus("Pending");		
            aa.inspection.editInspection(inspModel);
        }
        else {
            aa.print("Failed to get inspection.");
        }

        logDebug("Successfully scheduled pending inspection : " + iType);
    } else {
        logDebug("**ERROR: adding pending scheduling inspection (" + iType + "): " + schedRes.getErrorMessage());
    }
}
