//SWAKIL
var utilPermitType = getAppSpecific("Utility Permit Type") + "" 
logDebug(utilPermitType);

if("Private Water Utility Permit".equals(utilPermitType)){
	addPendingInspection("Infrastructure", "Generated by EMSE");
	//addPendingInspection("Pre-Control Flush", "Generated by EMSE");
	addPendingInspection("Pre-Control Clearwater", "Generated by EMSE");
	addPendingInspection("Line Fill", "Generated by EMSE");
	addPendingInspection("Chlorine and flush", "Generated by EMSE");
	addPendingInspection("Hydrostatic Pressure Test", "Generated by EMSE");
	addPendingInspection("Clearwater", "Generated by EMSE");
	addPendingInspection("Super Flush", "Generated by EMSE");
	addPendingInspection("Final Turn-On", "Generated by EMSE");
	addPendingInspection("Walkthrough", "Generated by EMSE");
	addPendingInspection("Initial Acceptance", "Generated by EMSE");
	addPendingInspection("Final Acceptance Inspection", "Generated by EMSE");
	addPendingInspection("3M Marker", "Generated by EMSE");

}else if("Private Storm Sewer Permit".equals(utilPermitType)){
	addPendingInspection("Infrastructure", "Generated by EMSE");
	addPendingInspection("Walkthrough", "Generated by EMSE");
	addPendingInspection("Initial Acceptance", "Generated by EMSE");
	addPendingInspection("Final Acceptance Inspection", "Generated by EMSE");

}else if("Public Storm Sewer Utility Permit".equals(utilPermitType)){
	addPendingInspection("Infrastructure", "Generated by EMSE");
	addPendingInspection("Walkthrough", "Generated by EMSE");
	addPendingInspection("Video", "Generated by EMSE");
	addPendingInspection("Initial Acceptance", "Generated by EMSE");
	addPendingInspection("Final Acceptance Inspection", "Generated by EMSE");
	addPendingInspection("Manhole Pressure Test", "Generated by EMSE");

}else if("Public Sanitary Sewer Utility Permit".equals(utilPermitType)){
	addPendingInspection("Infrastructure", "Generated by EMSE");
	addPendingInspection("Walkthrough", "Generated by EMSE");
	addPendingInspection("Video", "Generated by EMSE");
	addPendingInspection("Initial Acceptance", "Generated by EMSE");
	addPendingInspection("Final Acceptance Inspection", "Generated by EMSE");
	addPendingInspection("Manhole Pressure Test", "Generated by EMSE");

}else if("Private Sanitary Sewer Utility Permit".equals(utilPermitType)){
	addPendingInspection("Infrastructure", "Generated by EMSE");
	addPendingInspection("Walkthrough", "Generated by EMSE");
	addPendingInspection("Initial Acceptance", "Generated by EMSE");
	addPendingInspection("Final Acceptance Inspection", "Generated by EMSE");
	

}else if("Storm Water Permit".equals(utilPermitType)){

}else if("Public Water Utility Permit".equals(utilPermitType)){
	addPendingInspection("Infrastructure", "Generated by EMSE");
	//addPendingInspection("Pre-Control Flush", "Generated by EMSE");
	addPendingInspection("Pre-Control Clearwater", "Generated by EMSE");
	addPendingInspection("Line Fill", "Generated by EMSE");
	addPendingInspection("Chlorine and flush", "Generated by EMSE");
	addPendingInspection("Hydrostatic Pressure Test", "Generated by EMSE");
	addPendingInspection("Clearwater", "Generated by EMSE");
	addPendingInspection("Super Flush", "Generated by EMSE");
	addPendingInspection("Final Turn-On", "Generated by EMSE");
	addPendingInspection("Walkthrough", "Generated by EMSE");
	addPendingInspection("Initial Acceptance", "Generated by EMSE");
	addPendingInspection("Final Acceptance Inspection", "Generated by EMSE");
	addPendingInspection("3M Marker", "Generated by EMSE");
}


function addPendingInspection(iType, inspComm) {
    var inspId = 0;
    var inspectorObj = null;
    var inspTime = null;

    var schedRes = aa.inspection.scheduleInspection(capId, inspectorObj, aa.date.parseDate(dateAdd(null, 0)), inspTime, iType, inspComm);

    if (schedRes.getSuccess()) {
        inspId = schedRes.output;
        aa.print("inspId = " + inspId);

        var justScheduled = aa.inspection.getInspection(capId, inspId);

        if (justScheduled.getSuccess()) {
            var inspModel = justScheduled.getOutput();

            inspModel.setInspectionStatus("Pending");
            aa.inspection.editInspection(inspModel);
        }
        else {
            aa.print("Failed to get inspection.");
        }

        logDebug("Successfully scheduled pending inspection : " + iType);
    } else {
        logDebug("**ERROR: adding pending scheduling inspection (" + iType + "): " + schedRes.getErrorMessage());
    }
}
